pipeline {
    agent any 
    
    tools {
        nodejs 'node21'
        dockerTool 'docker'
    }

    environment {
        SONAR_HOME = tool name: 'sonarqube'
    }

    stages {
        stage('GitHub Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/Namrathaaaaaa/devsecops-tic-tac-toe.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }

        stage('Build') {
            steps {
                sh 'npm run build'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonar') { 
                    sh """
                        ${SONAR_HOME}/bin/sonar-scanner \
                        -Dsonar.projectKey=tic-tac-toe \
                        -Dsonar.projectName='tic-tac-toe-proj' \
                    """
                }
            }
        }

        stage('Docker Login to GHCR') {
            steps {
                // Inject GitHub PAT stored in Jenkins credentials
                withCredentials([string(credentialsId: 'github-pat', variable: 'GHCR_PAT')]) {
                    sh 'echo $GHCR_PAT | docker login ghcr.io -u namrathaaaaaa --password-stdin'
                }
            }
        }
        
        stage('Docker build and push') {
            steps {
                // Use all lowercase image name
                sh 'docker build -t ghcr.io/namrathaaaaaa/tic-tac-toe:latest .'
                sh 'docker push ghcr.io/namrathaaaaaa/tic-tac-toe:latest'
            }
        }

        stage('Docker run (optional)') {
            steps {
                // Run the container on the Jenkins agent if needed
                sh 'docker run -d -p 8000:80 ghcr.io/namrathaaaaaa/tic-tac-toe:latest'
            }
        }
    }
}
